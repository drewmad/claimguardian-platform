# Prometheus Configuration
# ClaimGuardian AI-Powered Insurance Platform Monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: "claimguardian-production"
    environment: "production"

# Rule files
rule_files:
  - "alert_rules.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]
    scrape_interval: 5s
    metrics_path: /metrics

  # Node Exporter (system metrics)
  - job_name: "node-exporter"
    static_configs:
      - targets: ["node-exporter:9100"]
    scrape_interval: 10s
    metrics_path: /metrics

  # ClaimGuardian Web Application
  - job_name: "claimguardian-web"
    static_configs:
      - targets: ["web:3000"]
    scrape_interval: 10s
    metrics_path: /api/metrics
    scrape_timeout: 10s

  # Redis metrics
  - job_name: "redis"
    static_configs:
      - targets: ["redis:6379"]
    scrape_interval: 10s
    metrics_path: /metrics

  # Nginx metrics (if nginx-prometheus-exporter is added)
  - job_name: "nginx"
    static_configs:
      - targets: ["nginx:9113"]
    scrape_interval: 10s
    metrics_path: /metrics

  # PostgreSQL metrics (Supabase monitoring via proxy)
  - job_name: "postgres"
    static_configs:
      - targets: ["postgres-exporter:9187"]
    scrape_interval: 15s
    metrics_path: /metrics

  # AI Cost Tracking WebSocket metrics
  - job_name: "ai-websocket"
    static_configs:
      - targets: ["web:3000"]
    scrape_interval: 5s
    metrics_path: /api/ws/metrics
    scrape_timeout: 5s

  # Custom application metrics
  - job_name: "claimguardian-custom"
    static_configs:
      - targets: ["web:3000"]
    scrape_interval: 15s
    metrics_path: /api/monitoring/metrics
    params:
      format: ["prometheus"]

  # Blackbox monitoring for external services
  - job_name: "blackbox-http"
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - https://claimguardianai.com
          - https://claimguardianai.com/api/health
          - https://grafana.claimguardianai.com
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # SSL Certificate monitoring
  - job_name: "blackbox-ssl"
    metrics_path: /probe
    params:
      module: [ssl_cert]
    static_configs:
      - targets:
          - claimguardianai.com:443
          - grafana.claimguardianai.com:443
          - metrics.claimguardianai.com:443
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # AI Service Provider Monitoring (external APIs)
  - job_name: "ai-providers"
    static_configs:
      - targets: ["web:3000"]
    scrape_interval: 30s
    metrics_path: /api/monitoring/ai-providers
    scrape_timeout: 15s

  # Business Metrics (revenue, users, claims)
  - job_name: "business-metrics"
    static_configs:
      - targets: ["web:3000"]
    scrape_interval: 60s
    metrics_path: /api/monitoring/business
    scrape_timeout: 30s

  # Mobile App Metrics (if mobile app reports to web backend)
  - job_name: "mobile-metrics"
    static_configs:
      - targets: ["web:3000"]
    scrape_interval: 30s
    metrics_path: /api/monitoring/mobile
    scrape_timeout: 15s

# Recording rules for aggregating metrics
recording_rules:
  - name: claimguardian.rules
    rules:
      # HTTP request rate
      - record: claimguardian:http_requests_per_second
        expr: rate(http_requests_total[5m])

      # HTTP request duration 99th percentile
      - record: claimguardian:http_request_duration_p99
        expr: histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[5m]))

      # Error rate
      - record: claimguardian:http_error_rate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m])

      # AI cost per hour
      - record: claimguardian:ai_cost_per_hour
        expr: increase(ai_request_cost_total[1h])

      # AI requests per second
      - record: claimguardian:ai_requests_per_second
        expr: rate(ai_requests_total[5m])

      # Active WebSocket connections
      - record: claimguardian:websocket_connections_active
        expr: websocket_connections_total - websocket_connections_closed_total

      # Database connection utilization
      - record: claimguardian:db_connection_utilization
        expr: pg_stat_activity_count / pg_settings_max_connections

      # Memory utilization
      - record: claimguardian:memory_utilization
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes

      # CPU utilization
      - record: claimguardian:cpu_utilization
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)

      # Disk utilization
      - record: claimguardian:disk_utilization
        expr: (node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes
# Remote write configuration (for long-term storage if needed)
# remote_write:
#   - url: "https://your-remote-storage/api/v1/write"
#     basic_auth:
#       username: "prometheus"
#       password: "your-password"

# Remote read configuration (for federated setups)
# remote_read:
#   - url: "https://your-remote-storage/api/v1/read"
#     basic_auth:
#       username: "prometheus"
#       password: "your-password"
