{
  "permissions": {
    "allow": [
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(grep:*)",
      "Bash(source:*)",
      "Bash(claude_log \"Created automated learning system with shell functions for logging discoveries\")",
      "Bash(claude_command \"pnpm typecheck\" \"Validates TypeScript across entire monorepo\")",
      "Bash(pnpm typecheck:*)",
      "Bash(pnpm type-check:*)",
      "Bash(pnpm lint:*)",
      "Bash(npx tsc:*)",
      "Bash(claude_error \"ESLint config import error: Package subpath ''./dist/eslintrc.cjs'' is not defined by exports\" \"Fix ESLint config import path\" \"apps/web/eslint.config.mjs\")",
      "Bash(pnpm add:*)",
      "Bash(claude_command \"pnpm add -D @types/jest\" \"Adds Jest type definitions for TypeScript projects\")",
      "Bash(ls:*)",
      "Bash(pnpm validate:*)",
      "Bash(claude_log \"Successfully fixed ALL TypeScript and ESLint errors across the entire ClaimGuardian monorepo. Project now passes full validation.\")",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nfix: Resolve all TypeScript and ESLint errors across monorepo\n\n- Fix ESLint configuration import path error\n- Re-enable TypeScript type-checking in web app  \n- Add comprehensive type definitions for components and APIs\n- Fix file handling type assertions (FileReader, image onError)\n- Add proper Jest and jest-dom type integration\n- Implement automated learning system for Claude Code\n- Fix UI component prop interfaces and type safety\n- Resolve asset/inventory data structure mismatches\n- Add type guards for all external API interactions\n\nAll packages now pass type-check and lint validation.\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(supabase:*)",
      "Bash(curl:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm dev:*)",
      "Bash(git commit:*)",
      "Bash(HUSKY=0 git commit --amend --no-edit)",
      "Bash(git pull:*)",
      "Bash(HUSKY=0 git commit -m \"feat: Complete authentication system with Supabase integration\n\n- Implement public landing page with hero section and authentication CTAs\n- Add Supabase authentication with email/password signup and signin\n- Create protected dashboard route with auth checks and user welcome\n- Add sign-in page with form validation and error handling\n- Implement authentication provider and context for global state\n- Add protected route wrapper with loading states and redirects\n- Install @supabase/supabase-js for client integration\n- Create Supabase setup documentation and examples\n- Add environment variable template and configuration files\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(HUSKY=0 git add .)",
      "Bash(HUSKY=0 git commit -m \"feat: Complete authentication system with Supabase integration\n\n- Implement public landing page with hero section and authentication CTAs\n- Add Supabase authentication with email/password signup and signin\n- Create protected dashboard route with auth checks and user welcome\n- Add sign-in page with form validation and error handling\n- Implement authentication provider and context for global state\n- Add protected route wrapper with loading states and redirects\n- Install @supabase/supabase-js for client integration\n- Create Supabase setup documentation and examples\n- Add environment variable template and configuration files\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(HUSKY=0 git commit -m \"feat: Complete authentication system with Supabase integration\n\n- Implement public landing page with hero section and authentication CTAs\n- Add Supabase authentication with email/password signup and signin\n- Create protected dashboard route with auth checks and user welcome\n- Add sign-in page with form validation and error handling\n- Implement authentication provider and context for global state\n- Add protected route wrapper with loading states and redirects\n- Install @supabase/supabase-js for client integration\n- Create Supabase setup documentation and examples\n- Add environment variable template and configuration files\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(HUSKY=0 git commit -m \"feat: Complete authentication system with Supabase integration\n\n- Implement public landing page with hero section and authentication CTAs\n- Add Supabase authentication with email/password signup and signin  \n- Create protected dashboard route with auth checks and user welcome\n- Add sign-in page with form validation and error handling\n- Implement authentication provider and context for global state\n- Add protected route wrapper with loading states and redirects\n- Install @supabase/supabase-js for client integration\n- Create Supabase setup documentation and examples\n- Add environment variable template and configuration files\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git rebase:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm turbo:*)",
      "Bash(pnpm --filter web build)",
      "Bash(pnpm ls:*)",
      "Bash(pnpm why:*)",
      "Bash(cat:*)",
      "Bash(pnpm run build:*)",
      "Bash(pnpm run lint:*)",
      "Bash(pnpm run:*)",
      "Bash(find:*)",
      "Bash(pnpm --filter=@claimguardian/ui build)",
      "Bash(mv:*)",
      "Bash(true)",
      "mcp__supabase__list_projects",
      "Bash(cd packages/mcp-server:*)",
      "Bash(pnpm --filter @claimguardian/mcp-server build)",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nfeat: Implement AI-augmented features with security compliance\n\nMajor additions:\n- AI Policy Chat: Interactive insurance policy advisor with GPT-4/Gemini\n- Damage Analyzer: AI-powered damage assessment from photos\n- Inventory Scanner: Automatic home inventory cataloging\n- IP/metadata logging middleware for security compliance\n- Comprehensive audit logging system with RLS policies\n\nSecurity & Compliance:\n- Created middleware for IP tracking and request logging\n- Added audit_logs and security_logs tables with indexes\n- Implemented row-level security policies\n- Added security headers (X-Frame-Options, CSP, etc.)\n\nAI Features:\n- Shared AI client supporting OpenAI and Google Gemini\n- Reusable chat interface component\n- Image upload with drag-and-drop support\n- Real-time analysis with progress indicators\n- Export functionality for reports and CSV\n\nUI Enhancements:\n- Added AI features section to dashboard\n- Created Badge, Progress, and Alert components\n- Integrated toast notifications with Sonner\n- Responsive design with dark theme optimization\n\nMCP Integration:\n- Custom MCP server for ClaimGuardian tools\n- Property, claim, and assessment management tools\n- TypeScript implementation with full type safety\n\nDependencies:\n- Added react-dropzone for file uploads\n- Added sonner for toast notifications\n- Configured AI API endpoints\n\nDatabase:\n- Created migration for audit logging tables\n- Added indexes for performance optimization\n- Implemented security-focused RLS policies\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nfix: Resolve all ESLint errors across the codebase\n\n- Remove unused imports and variables\n- Replace ''any'' types with proper types (unknown, specific types)\n- Fix React hooks dependency arrays\n- Fix unescaped entities in JSX\n- Remove unused function parameters\n- Update type definitions for better type safety\n\nAll packages now pass linting with zero warnings or errors.\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nfix: Resolve deployment failures and module resolution errors\n\n- Create missing UI components (Button, Card, Input, Textarea)\n- Add required dependencies (class-variance-authority, clsx, tailwind-merge)\n- Create utils.ts with cn utility function\n- Fix Sentry configuration by removing client-side init from layout\n- Add proper Sentry config files for client, server, and edge\n- Fix useSearchParams Suspense boundary issue in verify page\n- All UI components now use local implementations\n- Build now completes successfully\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(pnpm:*)",
      "Bash(node:*)",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nfix: Correct dependency locations for deployment\n\n- Move clsx and tailwind-merge from root to web app dependencies\n- Add class-variance-authority to web app dependencies\n- Update lockfile to ensure deployment success\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nfeat: Enhance AI features with document upload and improvements\n\nPolicy Advisor:\n- Add document upload capability for PDFs and text files\n- Integrate uploaded documents into chat context\n- Display upload status and allow document removal\n- Update welcome message based on document presence\n- Add file processing with size limits (50k chars)\n\nAI Model Defaults:\n- Damage Analyzer already uses OpenAI by default\n- Inventory Scanner already uses OpenAI by default\n- Policy Advisor defaults to OpenAI\n\nDocumentation:\n- Create comprehensive improvement recommendations document\n- Outline short-term and medium-term enhancements\n- Detail cross-feature integration opportunities\n- Provide implementation roadmap with priorities\n\nTechnical Notes:\n- Simplified PDF handling for browser compatibility\n- Added proper error handling and user feedback\n- Integrated with audit logging for compliance\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(touch:*)",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nfeat: Major AI features enhancement with advanced capabilities\n\nPolicy Advisor Enhancements:\n- Implement multi-document support with comparison mode\n- Upload and analyze multiple policy documents simultaneously  \n- Compare policies side-by-side with difference highlighting\n- Enhanced UI for document management with selection controls\n- Dynamic welcome messages based on document context\n\nInventory Scanner Enhancements:\n- Add real-time barcode scanning using device camera\n- Integrate @zxing/library for multiple barcode format support\n- Add barcode scan button to each inventory item\n- Automatic serial number capture from barcodes\n- Dynamic barcode scanner component with camera preview\n\nDamage Analyzer UI Enhancements:\n- Complete UI redesign with modern card layouts\n- Add gradient header with severity indicators\n- Implement visual progress bar for damage severity\n- Enhanced damage cards with icon indicators and color coding\n- Improved information hierarchy with location/cost badges\n- Better responsive design for mobile devices\n\nReporting System:\n- Create reusable ReportGenerator component\n- Support PDF, HTML, and text export formats\n- Add metadata tracking (date, reference, status)\n- Professional report layouts with sections\n- Print, email, and share functionality\n- Integrated across all AI features\n\nAdditional Components:\n- Create Progress component for visual indicators\n- Add barcode scanner modal component\n- Enhance Card components with better styling\n\nDocumentation:\n- Create AI_MODELS_AND_PROMPTS.md detailing:\n  - Default models for each feature (all use OpenAI by default)\n  - System prompts and response formats\n  - API configuration details\n  - Security and compliance notes\n\nTechnical Improvements:\n- Better error handling for document processing\n- Support for multiple file uploads\n- Enhanced type safety across components\n- Improved loading states and user feedback\n\nAll features now default to OpenAI models for consistency and quality.\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(pkill:*)",
      "Bash(HUSKY=0 git commit -m \"fix: Resolve authentication redirect issues and enhance platform documentation\n\n- Fixed circular dependencies in authentication services\n- Unified Supabase client usage across all services\n- Added ClientOnlyAuth wrapper to prevent hydration issues\n- Implemented comprehensive logging with enhanced-logger\n- Added auth debugging hooks and guides\n- Created comprehensive platform documentation:\n  - AI Features Roadmap with 27 planned features\n  - Data Collection Guide for Florida insurance claims\n  - Platform Overview with complete architecture details\n  - Authentication Debugging Guide\n- Updated all auth-related services to use unified client pattern\n- Temporarily disabled middleware redirects for debugging\n- Added extensive console logging for auth state tracking\n- Fixed all ESLint errors and warnings\n\nThis addresses the issue where authenticated users were being redirected from AI pages (Damage Analyzer, Policy Advisor, Inventory Scanner) back to the landing page.\")",
      "Bash(sed:*)",
      "Bash(npx prettier:*)",
      "Bash(npx eslint:*)",
      "Bash(npx tsx:*)",
      "Bash(HUSKY=0 git commit -m \"fix: Remove double ProtectedRoute wrapping in damage analyzer\n\n- Fixed redirect issue by removing inner ProtectedRoute wrapper\n- Enhanced logging to track authentication redirects\n- Created test page for debugging auth state changes\n\nThis resolves the issue where users were redirected to ''/'' when\ninteracting with document uploads in the damage analyzer.\")",
      "Bash(HUSKY=0 git commit -m \"feat: Enhance Sign Up/Sign In UI and create modern dashboard\n\n- Completely redesigned Sign Up modal with gradient backgrounds and improved UX\n- Enhanced Sign In modal to match new design language\n- Created DashboardLayout component with sidebar navigation\n- Updated main dashboard with modern dark theme design\n- Added property management dashboard with sub-tabs\n- Integrated AI features into dashboard sidebar\n- Added weather alerts and quick actions to main dashboard\")",
      "Bash(timeout 60 pnpm build)",
      "Bash(git reset:*)",
      "Bash(HUSKY=0 git commit -m \"fix: Resolve deployment error with server-side Supabase client\n\n- Created server-side legal service for API routes\n- Fixed createClient usage in API routes to use server version\n- Fixed JSX syntax errors in signup and login modals\n- Resolved div tag mismatch in modal components\n\nThis fixes the deployment error: ''Attempted to call createClient() from the server''\")",
      "Bash(HUSKY=0 git add -A)",
      "Bash(HUSKY=0 git commit -m \"feat: Complete dashboard system implementation\n\n- Add personal property inventory dashboard with categories and search\n- Add insurance coverage dashboard with policy management\n- Add claims tracking dashboard with status progression\n- Add home systems dashboard with maintenance schedules\n- Add maintenance task scheduling dashboard\n- Add contractors management dashboard\n- Add community hub with neighborhood alerts\n- Add disaster preparedness hub with emergency resources\n\nAll dashboards follow consistent dark theme design with:\n- Comprehensive stats overview cards\n- Interactive data tables/grids\n- Quick action buttons\n- AI feature integration points\n- Responsive mobile design\n- Mock data for demonstration\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git fetch:*)",
      "Bash(git restore:*)",
      "Bash(HUSKY=0 git commit -m \"$(cat <<'EOF'\nfix: Add proper error handling for missing AI API keys in damage analyzer\n\n- Check if OpenAI and Gemini API keys are configured\n- Show clear error messages when keys are missing\n- Disable model selection buttons when keys unavailable\n- Add helpful instructions for configuring API keys\n- Hide upload section when no API keys are configured\n- Set default model to first available option\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(HUSKY=0 git commit -m \"$(cat <<'EOF'\nfeat: Add customizable prompt editor to damage analyzer for testing\n\n- Add collapsible prompt editor with custom textarea\n- Allow users to modify the damage analysis system prompt\n- Show \"Custom\" badge when using non-default prompt\n- Include reset to default functionality\n- Only show editor when API keys are configured\n- Use custom prompt in damage analysis requests\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(HUSKY=0 git commit -m \"feat: Add comprehensive error logging and begin UI updates\n\n- Add AIErrorLogger class with comprehensive error tracking\n- Include performance monitoring and user action logging\n- Add helper functions for specific AI features\n- Begin updating damage analyzer to use DashboardLayout\n- Update header styling to match site's dark theme\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(HUSKY=0 git commit -m \"fix: Resolve build error in policy chat page\n\n- Fixed syntax error in PolicyChatContent function\n- Cleaned up function structure and JSX formatting\n- Ensured proper closing braces and parentheses\n- Maintained all error logging and UI improvements\n- Build now compiles successfully\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(HUSKY=0 git commit -m \"$(cat <<'EOF'\nfeat: Complete dashboard enhancement with 3D model generator and improved navigation\n\n- Add 3D Model Generator AI feature with photogrammetry capabilities\n- Rebuild Disaster Hub with Prepare/Survive/Recover phases\n- Enhance Personal Property inventory with better organization\n- Create comprehensive property navigation with subtabs\n- Add Warranty Center to settings modal\n- Fix environment variables to use server-side format (OPENAI_API_KEY, GEMINI_API_KEY)\n- Add FDOT parcel sync workflow and infrastructure\n- Implement AI service improvements with error handling and retry logic\nEOF\n)\")",
      "Bash(HUSKY=0 git commit -m \"$(cat <<'EOF'\nfix: Resolve critical deployment issues and regex syntax errors\n\nCRITICAL DEPLOYMENT FIXES:\n- Fix regex syntax error in input sanitizer (invalid character class range)\n- Simplify personal property page to prevent SWC compiler JSX parsing issues\n- Replace deprecated FullScreen icon with Maximize from lucide-react\n- Add missing @types/validator dependency for proper TypeScript compilation\n- Fix rate limiter const declaration lint error\n\nThis resolves the build failures that were preventing successful deployment.\nThe comprehensive security improvements, testing foundation, and code quality \nenhancements from the previous commits are preserved and functional.\n\nBuild now passes successfully with no errors or warnings.\n\n🤖 Generated with Claude Code\nEOF\n)\")",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nfeat: Complete AI tools suite with camera support and consistent UI\n\n- Add comprehensive AI Tools hub page with status indicators\n- Implement camera capture functionality for damage documentation\n- Create Claim Assistant with step-by-step guidance\n- Create Document Generator for automated claim documents\n- Create Communication Helper for professional correspondence\n- Create Settlement Analyzer with fairness scoring\n- Create Evidence Organizer with drag-and-drop support\n- Update navigation with AI Tools link\n- Add missing Label UI component\n- Fix imports and ensure build compatibility\n- Remove broken personal property page\n\nAll AI tools now feature:\n- Consistent dark theme UI (gray-800/700 cards)\n- API key status indicators\n- Responsive design\n- Error handling and loading states\n- Export functionality where applicable\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(HUSKY=0 git commit -m \"fix: Update inventory scanner UI to match dark theme consistency\n\n- Wrap page in DashboardLayout for consistent navigation\n- Update all cards to use bg-gray-800 with border-gray-700\n- Change text colors to white/gray-400 for dark theme\n- Update badges and buttons to match other AI tools styling\n- Fix model selection, stats cards, filters, and item cards\n- Ensure all inputs and selects use dark theme styling\n- Add proper CardContent/CardHeader components where needed\")",
      "Bash(HUSKY=0 git commit -m \"feat: Build comprehensive Personal Property inventory page\n\n- Remove Beach House property example from dashboard\n- Create full-featured personal property management interface\n- Add category-based organization (Electronics, Jewelry, Furniture, etc.)\n- Include summary statistics cards (total items, value, insured items)\n- Implement grid and list view toggle for items display\n- Add search and filter functionality by category\n- Show purchase price vs current value with gain/loss indicators\n- Include quick actions for reports, bulk uploads, and value analysis\n- Link to AI inventory scanner for easy item addition\n- Mock sample items to demonstrate functionality\")",
      "Bash(HUSKY=0 git commit -m \"fix: Improve camera connectivity and image upload functionality\n\n- Move camera button outside dropzone to prevent click conflicts\n- Add better error handling with specific error messages for camera issues\n- Implement camera fallback when facingMode is not supported\n- Fix useEffect to prevent multiple camera initialization\n- Update dark theme styling for image upload component\n- Improve camera stream cleanup and management\n- Add min width/height constraints for better compatibility\n- Separate camera and upload as distinct features\")",
      "Bash(HUSKY=0 git commit -m \"fix: Fix sign-in button showing loading state on initial render\n\n- Add mounted state to prevent hydration mismatches\n- Ensure button shows ''Sign In'' text before component is mounted\n- Add proper loading spinner when actually signing in\n- Prevent button interactions until component is fully mounted\")",
      "Bash(HUSKY=0 git commit -m \"feat: Implement property edit functionality with Supabase integration\n\n- Create server actions for property CRUD operations\n- Update property detail page to fetch and save to Supabase\n- Update property list page to fetch from Supabase\n- Add loading states and error handling\n- Add saving state to edit form\n- Create sample property migration for testing\n- Fallback to mock data when no properties exist\n\nThe edit functionality now properly saves to the database and updates both local state and Supabase.\")",
      "Bash(HUSKY=0 git commit -m \"fix: Prevent loading overlay on sign-in page\n\n- Remove mounted state check that was causing issues\n- Simplify sign-in button to show correct state\n- Add loading.tsx to prevent Next.js loading overlay\n- Add debug logging to track loading state\n\nThe sign-in page should now show properly without any loading overlay before entering credentials.\")",
      "Bash(HUSKY=0 git commit -m \"fix: Fix loading state issues in signup and login modals\n\n- Use local loading state instead of global auth loading state\n- Add proper loading state management in handleSubmit functions\n- Prevents modals from showing loading state before form submission\n- Fixes issue where ''Creating Account...'' and ''Signing In...'' appeared on initial render\n\nBoth signup and login modals now correctly show their default button text until the user actually submits the form.\")",
      "Bash(HUSKY=0 git commit -m \"fix: Resolve authentication issues for production deployment\n\n- Add site URL utility to handle production URLs correctly\n- Replace hardcoded window.location.origin with configurable URLs\n- Add enhanced error logging for production debugging\n- Add environment variable validation and documentation\n- Add Supabase configuration error handling\n- Create production environment example file\n- Add comprehensive Supabase auth setup documentation\n\nKey changes:\n- Auth callbacks now use NEXT_PUBLIC_SITE_URL in production\n- Better error visibility with [ClaimGuardian Auth] prefixed logs\n- Environment variable checking to catch misconfigurations early\n- Debug mode can be enabled with NEXT_PUBLIC_DEBUG_AUTH=true\n\nTo fix auth on claimguardianai.com:\n1. Set NEXT_PUBLIC_SITE_URL=https://claimguardianai.com\n2. Add all redirect URLs to Supabase dashboard\n3. Enable NEXT_PUBLIC_DEBUG_AUTH=true temporarily for debugging\")"
    ],
    "deny": []
  },
  "mcpServers": {
    "claimguardian": {
      "command": "node",
      "args": [
        "packages/mcp-server/dist/index.js"
      ]
    }
  }
}